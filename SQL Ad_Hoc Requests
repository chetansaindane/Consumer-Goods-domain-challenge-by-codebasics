 # 1. Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region 
  
  select market, customer, region 
  from dim_customer
  where market = 'Atliq Exclusive' && region = 'APAC'



#2. What is the percentage of unique product increase in 2021 vs. 2020? The    #--final output contains these fields-    #unique_products_2020 , unique_products_2021, percentage_chg #
 
WITH unique_products AS (
    SELECT
        COUNT(DISTINCT CASE WHEN fiscal_year = 2020 THEN product_code END) AS unique_products_2020,
        COUNT(DISTINCT CASE WHEN fiscal_year = 2021 THEN product_code END) AS unique_products_2021
    FROM
        fact_sales_monthly
)
SELECT *,
		round((unique_products_2021 - unique_products_2020) * 100.0/ unique_products_2020,2) as pct_chg
FROM
    unique_products;




#3. Provide a report with all the unique product counts for each segment and
#sort them in descending order of product counts. The final output contains 2 fields, segment, product_count

SELECT 
	segment,
    count(distinct product_code) as unique_products
FROM 
	dim_product
GROUP BY 
	segment
ORDER BY 
	unique_products desc 





 #4. Follow-up: Which segment had the most increase in unique products in  2021 vs 2020? The final output contains these fields, segment , product_count_2020, product_count_2021, difference

WITH unique_products as (
SELECT 
	segment,
    COUNT(DISTINCT CASE WHEN fiscal_year = 2020 THEN p.product_code END) AS unique_products_2020,
    COUNT(DISTINCT CASE WHEN fiscal_year = 2021 THEN p.product_code END) AS unique_products_2021
FROM   
    fact_sales_monthly f 
JOIN 
	dim_product p
ON
	f.product_code = p.product_code
GROUP BY 
	segment
)
SELECT 
	*,
    (unique_products_2021 - unique_products_2020) as difference
from unique_products
order by difference desc




#.5 Get the products that have the highest and lowest manufacturing costs.
#The final output should contain these fields   product_code,   product ,   manufacturing_cost

SELECT
	p.segment as segment,
	p.product_code as product_code,
    p.product as product,
    m.manufacturing_cost as manufacturing_cost,
    p.category as category
FROM 
	fact_manufacturing_cost m
INNER JOIN
	dim_product p
ON   m.product_code = p.product_code
WHERE 
	m.manufacturing_cost =( select max(manufacturing_cost) as highest_manufacturing_cost from fact_manufacturing_cost) 
 OR 
	m.manufacturing_cost =( select min(manufacturing_cost) as lowest_manufacturing_cost from fact_manufacturing_cost)




 #  6. Generate a report which contains the top 5 customers who received an
#average high pre_invoice_discount_pct for the fiscal year 2021 and in the
#Indian market. The final output contains these fields,  customer_code ,  customer, average_discount_percentage

SELECT 
	c.customer_code as customer_code,
    c.customer as customer,
	concat(round(avg(pre_invoice_discount_pct)*100,2),'%') as avg_discount_pct
 FROM
	fact_pre_invoice_deductions f
INNER JOIN 
	dim_customer c
ON f.customer_code = c.customer_code
WHERE 
	market = "India" AND fiscal_year = 2021
 GROUP BY 
	customer_code,
    customer
ORDER BY avg(pre_invoice_discount_pct) desc
limit 5;





#7. Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month. This analysis helps to get an idea of low and high-performing months and take strategic decisions.
#The final report contains these columns: Month  ,Year, Gross sales Amount
   
  SELECT 
    MONTHNAME(S.date) as Month,
    EXTRACT(YEAR FROM S.date) as Year,
    CONCAT(ROUND(SUM(S.sold_quantity * G.gross_price)/1000000, 2),'M') as Gross_Sales_Amount 
FROM 
    fact_sales_monthly S
INNER JOIN 
    fact_gross_price G ON S.product_code = G.product_code
INNER JOIN 
    dim_customer C ON C.customer_code = S.customer_code
WHERE 
    C.customer = 'Atliq Exclusive'
GROUP BY 
    Month, Year
ORDER BY 
	YEAR;





#8. In which quarter of 2020, got the maximum total_sold_quantity? 
# The final output contains these fields sorted by the total_sold_quantity, Quarter,  total_sold_quantity    

SELECT 
	CASE
		WHEN MONTH(date) IN (9,10,11 )THEN 'Q1'
        WHEN MONTH(date) IN (12,1,2) THEN 'Q2'
        WHEN MONTH(date) IN (3,4,5 )THEN 'Q3'
        ELSE 
        'Q4'
        END AS Quarters,
	SUM(sold_quantity) as total_sold_quantity
FROM 
    fact_sales_monthly s
WHERE 
	fiscal_year = 2020
GROUP BY 
    Quarters
ORDER BY 
    total_sold_quantity DESC;




#9.  Which channel helped to bring more gross sales in the fiscal year 2021 
#and the percentage of contribution?  The final output  contains these fields, ----- channel ,,, gross_sales_mln ,  percentage     

WITH Gross_sales AS 
(  SELECT 
	c.channel,
	CONCAT(ROUND(SUM(gross_price * sold_quantity) / 10000000, 2), 'M') AS gross_sales_mln
FROM 
	fact_sales_monthly s
INNER JOIN 
	fact_gross_price p
ON s.product_code = p.product_code
INNER JOIN 
	dim_customer c 
ON c.customer_code = s.customer_code
WHERE 
	s.fiscal_year = 2021
GROUP BY 
	channel )

SELECT
	channel,
	gross_sales_mln,
	CONCAT(ROUND(gross_sales_mln / sum(gross_sales_mln) OVER() * 100,2),'%') as percentage
FROM Gross_Sales
GROUP BY channel
ORDER BY percentage desc 




#10.  Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? 
#The final output contains these fields, ---- division ,product_code 	-----
		
WITH Ranked_Product AS (
    SELECT 
        p.division,
        p.product,
        p.product_code,
        SUM(s.sold_quantity) AS total_sold_quantity,
        ROW_NUMBER() OVER (PARTITION BY p.division ORDER BY SUM(s.sold_quantity) DESC) AS Row_Numbers
    FROM
        dim_product p
    INNER JOIN
        fact_sales_monthly s ON p.product_code = s.product_code
    WHERE
        fiscal_year = 2021
    GROUP BY
        p.division,
        p.product,
        p.product_code
)
SELECT 
    division,
    product,
    product_code,
    total_sold_quantity
FROM
    Ranked_Product
WHERE 
    Row_Numbers <= 3;
    
 
    
